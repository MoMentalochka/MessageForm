{"version":3,"sources":["components/Form/Form.module.css","components/MessagePage/MessageStatus.module.css","components/File/File.module.css","components/MessagePage/MessagePage.module.css","components/FormPage/FormPage.module.css","components/File/File.jsx","validation/BasicScheme.js","components/Form/Form.jsx","components/MessagePage/MessageStatus.jsx","components/MessagePage/MessagePage.jsx","components/FormPage/FormPage.jsx","DAL/MessageApi.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","FormFile","props","blok","fileData","map","b","index","className","styles","key","file","fa","aria-hidden","split","length","slice","delete","onClick","DeleteFile","BasicFormSchema","Yup","shape","for_name","min","max","required","from_name","for_email","email","from_email","theme","message","MessageForm","FileUpdate","Data","Files","document","getElementById","files","i","push","name","UpdateFiles","initialValues","validationSchema","onSubmit","values","resetForm","status","SendMessage","setTimeout","render","errors","touched","isValid","action","container","encType","title","form_blok","form_label","col","type","form_control","placeholder","style","paddingTop","paddingBottom","File","state","form_file","htmlFor","id","multiple","onChange","form_blok10","btn","disabled","MessageStatus","color","header","data","date","green","red","MessagePage","MessageStatusItems","messageData","FormPage","Sending","some","form","Form","loading","ClearHistory","sendsay","Sendsay","auth","login","password","MessageApi","Track","request","App","month","Date","getMonth","day","getDate","setState","then","res","check","setInterval","obj","clearTimeout","last","pop","copyFileData","splice","localStorage","removeItem","getItem","this","JSON","parse","nextProps","nextState","setItem","stringify","Validate","React","Component","Boolean","window","location","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5463a817.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Form_title__3wm12\",\"form_blok\":\"Form_form_blok__3dTUf\",\"form_blok10\":\"Form_form_blok10__21c3T\",\"form_label\":\"Form_form_label__1aIk9\",\"form_control\":\"Form_form_control__Hwa1W\",\"col\":\"Form_col__1XT_p\",\"form_file\":\"Form_form_file__1WXug\",\"btn\":\"Form_btn__1yeNR\",\"fa\":\"Form_fa__18oz7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MessageStatus_container__3-c40\",\"header\":\"MessageStatus_header__3auD0\",\"data\":\"MessageStatus_data__iST_V\",\"theme\":\"MessageStatus_theme__3iQHu\",\"status\":\"MessageStatus_status__2SPFx\",\"green\":\"MessageStatus_green__15Vaq\",\"red\":\"MessageStatus_red__1D7QE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blok\":\"File_blok__3bG5Y\",\"file\":\"File_file__1YX0G\",\"fa\":\"File_fa__HJqSa\",\"delete\":\"File_delete__2o7vU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MessagePage_container__dMst3\",\"header\":\"MessagePage_header__249WP\",\"data\":\"MessagePage_data__1Cvpm\",\"theme\":\"MessagePage_theme__T0lyP\",\"status\":\"MessagePage_status__16r_O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FormPage_container__1hWhO\",\"form\":\"FormPage_form__HuxW-\",\"fa\":\"FormPage_fa__L4A1i\",\"loading\":\"FormPage_loading__3vV0f\"};","import React from 'react'\r\nimport styles from './File.module.css'\r\n\r\nconst FormFile = (props) => {\r\n\r\n    let blok = props.fileData.map((b,index) => \r\n        <div className={styles.blok} key={index}>\r\n            <div className={styles.file}>\r\n            <i className={styles.fa + \" fa fa-paperclip\"} aria-hidden=\"true\"></i>\r\n            {b.split('.')[0].length > 15 ? (b.split('.')[0].slice(0,15) +\"...\"+b.split('.')[1]) : b}\r\n            </div>\r\n\r\n            <div className={styles.delete}>\r\n            <i className={styles.fa + \" fa fa-trash-o\"} aria-hidden=\"true\"></i>\r\n            <span onClick = {()=>props.DeleteFile(index)} >Удалить </span>\r\n            </div>\r\n        </div>\r\n    )\r\n    return (\r\n        <div >\r\n         {blok}\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default FormFile ","import * as Yup from \"yup\";\r\n\r\nconst BasicFormSchema = Yup.object().shape({\r\n    for_name: Yup.string()\r\n    .min(2, \"Минимум 2 символа*\")\r\n    .max(40, \"Максимум 40 символов*\")\r\n    .required('Обязательное поле*'),\r\n\r\n    from_name: Yup.string()\r\n    .min(2, \"Минимум 2 символа*\")\r\n    .max(40, \"Максимум 40 символов*\")\r\n    .required('Обязательное поле*'),\r\n\r\n    for_email: Yup.string()\r\n    .email(\"Некорректный Email адрес*\")\r\n    .required('Обязательное поле*'),\r\n\r\n    from_email: Yup.string()\r\n    .email(\"Некорректный Email адрес*\")\r\n    .required('Обязательное поле*'),\r\n\r\n    theme: Yup.string()\r\n    .min(2, \"Минимум 2 символа*\")\r\n    .max(30, \"Максимум 30 символов*\")\r\n    .required('Обязательное поле*'),\r\n\r\n    message: Yup.string()\r\n    .min(2, \"Минимум 2 символа\")\r\n    .max(300, \"Максимум 300 символов*\")\r\n    .required('Обязательное поле*'),\r\n  \r\n});\r\nexport default BasicFormSchema;","import React from 'react'\r\nimport styles from \"./Form.module.css\"\r\nimport File from '../File/File'\r\nimport { Formik, Field, Form } from \"formik\";\r\nimport BasicFormSchema from \"../../validation/BasicScheme\";\r\n\r\n\r\nconst MessageForm = (props) => {\r\n    // ===== Мониторинг полей формы ========\r\n    let FileUpdate = () => {\r\n        let Data = []\r\n        let Files = document.getElementById('file').files\r\n        for (let i = 0; i < Files.length; i++) {\r\n            Data.push(document.getElementById('file').files[i].name)\r\n        }\r\n        props.UpdateFiles(Data)\r\n\r\n    }\r\n\r\n    \r\n    return(\r\n    <Formik\r\n    //инициализируем значения input-ов\r\n    initialValues={{\r\n      for_email: '',\r\n      for_name: '',\r\n      from_email: '',\r\n      from_name: '',\r\n      theme: '',\r\n      message: '',\r\n    }}\r\n    //подключаем схему валидации, которую описали выше\r\n    validationSchema={BasicFormSchema}\r\n    //определяем, что будет происходить при вызове onsubmit\r\n    onSubmit={(values,{ resetForm }) => {\r\n        values.status = 'В очереди'\r\n        props.SendMessage(values)\r\n        setTimeout(() => {\r\n          resetForm()\r\n        }, 500);\r\n        \r\n      }}\r\n    \r\n    //свойство, где описывыем нашу форму\r\n    //errors-ошибки валидации формы\r\n    //touched-поля формы, которые мы \"затронули\",\r\n    //то есть, в которых что-то ввели\r\n    render={ ({ errors, touched, isValid }) => (\r\n      <Form action='' className={styles.container} encType='multipart/form-data'>\r\n          <div className={styles.title}><h2>Отправлялка сообщений</h2></div>\r\n\r\n          <div className={styles.form_blok}>\r\n\r\n              <span className={styles.form_label}>От кого</span>\r\n\r\n              <div className=\"form-row\">\r\n\r\n                  <div className={styles.col + \" col\"}>\r\n                      <Field type=\"text\" className={styles.form_control + ' form-control ' +(errors.from_name && touched.from_name && ' is-invalid')} name=\"from_name\" placeholder=\"Имя\"/>\r\n                       \r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.from_name}\r\n                      </div>\r\n                  </div>\r\n\r\n                  <div className={styles.col + \" col\"}>\r\n                      <Field type=\"text\" className={styles.form_control + ' form-control ' +(errors.from_email && touched.from_email && ' is-invalid')} name=\"from_email\" placeholder=\"Email\"/>\r\n                     \r\n                      <div className=\"invalid-feedback\">\r\n                      {errors.from_email}\r\n                      </div>\r\n                  </div>\r\n\r\n              </div>\r\n          </div>\r\n\r\n          <div className={styles.form_blok}>\r\n              <span className={styles.form_label}>Кому</span><br />\r\n              <div className=\"form-row\">\r\n                  <div className={styles.col + \" col\"}>\r\n                  <Field type=\"text\" className={styles.form_control + ' form-control ' +(errors.for_name && touched.for_name && ' is-invalid')} name=\"for_name\" placeholder=\"Имя\"/>\r\n                 \r\n                        <div className=\"invalid-feedback\">\r\n                            {errors.for_name}\r\n                        </div>\r\n                  </div>\r\n                  <div className={styles.col + \" col\"}>\r\n                  <Field type=\"text\" className={styles.form_control + ' form-control ' +(errors.for_email && touched.for_email && ' is-invalid')} name=\"for_email\" placeholder=\"Email\"/>\r\n                        <div className=\"invalid-feedback\">\r\n                            {errors.for_email}\r\n                        </div>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n\r\n          <div className={styles.form_blok}>\r\n              <span className={styles.form_label}>Тема письма</span><br />\r\n              <Field type=\"text\" className={styles.form_control + ' form-control ' +(errors.theme && touched.theme && ' is-invalid')} name=\"theme\" placeholder=\" Тема\"/>\r\n                <div className=\"invalid-feedback\">\r\n                    {errors.theme}\r\n                </div>\r\n          </div>\r\n\r\n          <div className={styles.form_blok}>\r\n\r\n              <span className={styles.form_label}>Сообщение</span>\r\n              <Field type=\"text\" className={styles.form_control + ' form-control ' +(errors.message && touched.message && ' is-invalid')} style={{ paddingTop: 15, paddingBottom: 90 }} name=\"message\" placeholder=\"Ваше сообщение\"/>\r\n                <div className=\"invalid-feedback\">\r\n                    {errors.message}\r\n                </div>\r\n          </div>\r\n\r\n          <File fileData={props.state.fileData} DeleteFile={props.DeleteFile} />\r\n\r\n          <div className={styles.form_file}>\r\n              <label htmlFor=\"file\"><i className={styles.fa + \" fa fa-paperclip\"} aria-hidden=\"true\"></i> Прикрепить файл</label>\r\n              <Field type=\"file\"  id =\"file\" name=\"files\" multiple onChange={FileUpdate} />\r\n          </div>\r\n\r\n          \r\n          <div className={styles.form_blok10}>\r\n              <button type=\"submit\" className={styles.btn + \" btn btn-primary\"}  disabled={!isValid}>Отправить</button>\r\n\r\n              \r\n          </div>\r\n\r\n\r\n      </Form>\r\n      \r\n    )}\r\n    \r\n  />\r\n    )\r\n}\r\n\r\nexport default MessageForm","import React from 'react'\r\nimport styles from './MessageStatus.module.css'\r\nconst MessageStatus = (props) => {\r\n    //Цвет статуса\r\n    let color\r\n    if (props.status === 'Отправлено') {\r\n        color = 'green'\r\n    }\r\n    else if (props.status === 'Ошибка') {\r\n        color = 'red'\r\n    }\r\n\r\n    return (\r\n        <div className={styles.header + \" row\"}>\r\n            <div className={\"col-2 \" + styles.data}>{props.date}</div>\r\n            <div className={\"col-8 \" + styles.theme}>{props.theme}</div>\r\n            <div className={\"col-2 \" + styles.status + \" \" + (color === 'green' && styles.green) + ' ' + (color === 'red' && styles.red)}>{props.status}</div>\r\n        </div>\r\n    )\r\n}\r\nexport default MessageStatus","import React from 'react'\r\nimport styles from './MessagePage.module.css'\r\nimport MessageStatus from './MessageStatus'\r\n\r\n\r\n\r\nconst MessagePage = (props) => {\r\n\r\n    let MessageStatusItems = props.state.messageData.map((i, index) => <MessageStatus key={index} theme={i.theme} status={i.status} date={i.date} />)\r\n    return (\r\n        <div className={styles.container}>\r\n            <h4>Отправленные сообщения</h4>\r\n\r\n            {props.state.messageData.length === 0\r\n                ? <div>Сообщения ещё не отправлялись</div>\r\n\r\n                : <><div className={styles.header + \" row\"}>\r\n                    <div className={\"col-2 \" + styles.data}>Дата</div>\r\n                    <div className={\"col-8 \" + styles.theme}>Тема</div>\r\n                    <div className={\"col-2 \" + styles.status}>Статус</div>\r\n                </div>\r\n\r\n                    {MessageStatusItems}\r\n                </>\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default MessagePage","import React from 'react'\r\nimport styles from \"../FormPage/FormPage.module.css\"\r\nimport Form from '../Form/Form'\r\nimport MessagePage from '../MessagePage/MessagePage';\r\n\r\nconst FormPage = (props) => {\r\n    let Sending = !props.state.messageData.some(i => i.status === 'В очереди')\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            {Sending\r\n                ? <div className={styles.form}>\r\n                    <Form {...props} />\r\n                </div>\r\n                : <div className={styles.loading}>\r\n                    <h2>Сообщение поставлено в очередь на отправку</h2>\r\n                    <p>Совсем скоро сообщение вылетит из сервера,\r\n                     и будет двигаться в сторону почты получателя\r\n             «{props.state.messageData[props.state.messageData.length - 1].for_email}»\r\n              со скоростью электронов.</p>\r\n                </div>\r\n            }\r\n            <MessagePage state={props.state} />\r\n\r\n            <button onClick={() => props.ClearHistory()}> Очистить</button>\r\n        </div>\r\n    )\r\n}\r\nexport default FormPage","import Sendsay from 'sendsay-api';\r\n//==== Шаблон запроса ====\r\nconst sendsay = new Sendsay({\r\n  auth: {\r\n    login: 'momentalochka@yandex.ru',\r\n    password: 'be7Bukeeg',\r\n  }\r\n});\r\n\r\n\r\nexport const MessageApi = {\r\n  //==== Запрос о состоянии ====\r\n  Track(id) {\r\n    return (sendsay.request({\r\n      \"action\": \"track.get\",\r\n      \"id\": id,\r\n      \"session\": \"session\"\r\n    },\r\n    ))\r\n  },\r\n  //==== Отправка сообщения ====\r\n  SendMessage(data,file) {\r\n    return (\r\n      sendsay.request({\r\n\r\n        \"action\": \"issue.send.test\",\r\n        \"letter\": {\r\n          \"subject\": data.theme,\r\n          \"from.name\": data.from_name,\r\n          \"from.email\": data.from_email,\r\n          \"to.name\": data.for_name,\r\n          \"message\": { \"text\": data.message },\r\n          \"attaches\": [\r\n            {\r\n              \"name\": \"имя файла\",\r\n              \"content\":\"\",\r\n              \"encoding\": \"base64\",\r\n            }\r\n          ]\r\n        },\r\n        \"sendwhen\": \"test\",\r\n        \"mca\": [\r\n          data.for_email,\r\n        ]\r\n      }\r\n      ))\r\n  }\r\n\r\n}\r\n\r\n","import React from 'react';\r\nimport './App.css';\r\nimport FormPage from './components/FormPage/FormPage';\r\nimport { MessageApi } from './DAL/MessageApi';\r\n\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n  // ==== Подгружаем инициализационные данные ====\r\n  componentWillMount() {\r\n    localStorage.getItem('state')\r\n      ? this.setState({\r\n        ...JSON.parse(localStorage.getItem('state'))\r\n      })\r\n      : this.setState({\r\n        fileData: [],\r\n        messageData: [],\r\n      })\r\n  }\r\n  componentWillUpdate(nextProps, nextState) {\r\n\r\n    localStorage.setItem('state', JSON.stringify({ ...nextState }))\r\n  }\r\n\r\n  // Отправка формы \r\n  SendMessage = (data) => {\r\n    //==== Формируем время отправки сообщения ====\r\n    let monthList = ['Января', 'Февраля', 'Марта', 'Апреля', 'Мая', 'Июня', 'Июля', 'Августа', 'Сентября', 'Октября', 'Ноября', 'Декабря']\r\n    let month = monthList[new Date().getMonth()];\r\n    let day = new Date().getDate();\r\n    data.date = day + ' ' + month;\r\n    //==== Добавляем поле время объекту с сообщением ====\r\n    this.setState({\r\n      messageData: [...this.state.messageData, { ...data }],\r\n      fileData: [],\r\n    })\r\n    //Отправка сообщения \r\n    MessageApi.SendMessage(data)\r\n      .then((res) => {\r\n        let check = setInterval((res) => {\r\n          //==== ожидание завершения отправки ====\r\n          MessageApi.Track(res['track.id'])\r\n            .then((res) => {\r\n              //==== при успешной отправке ====\r\n              if (res.obj.status === '-1') {\r\n                clearTimeout(check)\r\n                let last = this.state.messageData.pop()\r\n                last.status = 'Отправлено'\r\n                this.setState({\r\n                  messageData: [...this.state.messageData, { ...last }],\r\n                })\r\n              }\r\n              //=== при ошибке ===\r\n              else if (res.obj.status === '-2') {\r\n                clearTimeout(check)\r\n                let last = this.state.messageData.pop()\r\n                last.status = 'Ошибка'\r\n                this.setState({\r\n                  messageData: [...this.state.messageData, { ...last }],\r\n                })\r\n              }\r\n\r\n            });\r\n        }, 1000, res, this.state)\r\n      }\r\n      )\r\n\r\n  };\r\n  // Загрузка выбранных файлов\r\n  UpdateFiles = (data) => {\r\n    \r\n    this.setState({\r\n      \r\n      fileData: data,\r\n    })\r\n  };\r\n  //Удаление файла из списка выбраннных\r\n  DeleteFile = (index) => {\r\n    let copyFileData = [...this.state.fileData]\r\n    copyFileData.splice(index, 1)\r\n    this.setState({\r\n      fileData: copyFileData\r\n    })\r\n  };\r\n  //Очистка localstorage\r\n  ClearHistory = () => {\r\n    localStorage.removeItem('state')\r\n    setTimeout(() => {\r\n      this.setState({\r\n        messageData: [],\r\n      })\r\n    }, 300);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <FormPage UpdateFiles={this.UpdateFiles} state={this.state} DeleteFile={this.DeleteFile} Validate={this.Validate} SendMessage={this.SendMessage} ClearHistory={this.ClearHistory} />\r\n    )\r\n\r\n  }\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport './css/bootstrap.css';\r\nimport './css/font-awesome-4.7.0/css/font-awesome.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}